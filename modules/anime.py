import aiohttp
from telethon import events
from utils.misc import modules_help
from utils.scripts import command
from deep_translator import GoogleTranslator

async def anime(event: events.NewMessage.Event):
    query = event.pattern_match.group(1)
    await event.edit("üîç –ò—â—É –∞–Ω–∏–º–µ...")

    jikan_url = f"https://api.jikan.moe/v4/anime?q={query}&limit=1"

    try:
        async with aiohttp.ClientSession() as session:
            # –ó–∞–ø—Ä–æ—Å –∫ Jikan API
            async with session.get(jikan_url) as resp:
                if resp.status != 200:
                    await event.edit("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö —Å Jikan API.")
                    return
                data = await resp.json()

            results = data.get("data")
            if not results:
                await event.edit("‚ùå –ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")
                return

            anime = results[0]
            title = anime.get("title")
            title_jp = anime.get("title_japanese", "")
            episodes = anime.get("episodes", "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")
            score = anime.get("score", "N/A")
            status = anime.get("status", "N/A")
            synopsis = anime.get("synopsis", "–Ω–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—è")[:1000]
            url = anime.get("url")
            image = anime.get("images", {}).get("jpg", {}).get("image_url")

            # –ü–µ—Ä–µ–≤–æ–¥ —á–µ—Ä–µ–∑ Google Translate
            if synopsis and synopsis != "–Ω–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—è":
                try:
                    translated_synopsis = GoogleTranslator(source='auto', target='ru').translate(synopsis)
                except Exception:
                    translated_synopsis = "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ –æ–ø–∏—Å–∞–Ω–∏–µ."
            else:
                translated_synopsis = "‚ùå –û–ø–∏—Å–∞–Ω–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç."

        caption = (
            f"üéå <b>{title}</b> ({title_jp})\n\n"
            f"üì∫ –≠–ø–∏–∑–æ–¥—ã: {episodes}\n"
            f"‚≠ê –û—Ü–µ–Ω–∫–∞: {score}\n"
            f"üì° –°—Ç–∞—Ç—É—Å: {status}\n\n"
            f"üìñ <b>–û–ø–∏—Å–∞–Ω–∏–µ:</b>\n{translated_synopsis}\n\n"
        )

        MAX_CAPTION_LENGTH = 1024

        caption = caption[:MAX_CAPTION_LENGTH - 3] + '...' if len(caption) > MAX_CAPTION_LENGTH else caption

        try:
            await event.respond(caption, file=image, link_preview=False, parse_mode='html')
        except Exception as e:
            # fallback, –µ—Å–ª–∏ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª–∞
            await event.reply(f"üí• –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ: {e}")

        await event.delete()

    except Exception as e:
        await event.edit(f"üí• –û—à–∏–±–∫–∞: {e}")


handlers = [
    (anime, command('anime'))
]

modules_help['anime'] = {
    'anime [–Ω–∞–∑–≤–∞–Ω–∏–µ]': '–ü–æ–∏—Å–∫ –∞–Ω–∏–º–µ'
}